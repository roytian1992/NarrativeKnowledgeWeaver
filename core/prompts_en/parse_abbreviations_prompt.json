{
  "id": "parse_abbreviations_prompt",
  "category": "regular_function",
  "name": "Extract Abbreviations and Technical Terms (Standardized Fields)",
  "description": "Extract English abbreviations and technical terms from text.",
  "template": "Read the input text and generate a JSON according to the requirements.\n\n【Task Scope】\n- Extract both:\n  1) English abbreviations/codes/models: composed of Latin letters, digits, hyphens, dots, or slashes, length 2–20, preserve original case and symbols;\n  2) Technical terms: related to engineering, technology, military, aerospace, computing/AI, organizations & systems, plans/projects; can be multi-word phrases.\n\n【Fields & Constraints (Whitelist)】\n- Each entry must contain:\n  - name: the fragment 【exactly as in the text】; keep case, spaces, hyphens, dots, slashes as-is;\n  - description: 12–30 words in English providing an objective explanation;\n- Optional fields:\n  - abbr: if it is an abbreviation/code/model, fill in the abbreviation as in the text (usually the same as name);\n  - full: only if the text 【explicitly provides】 the full form (use exactly as in the text);\n- Strictly forbid outputting any fields other than name/description/abbr/full/zh.\n\n【Splitting & Merging Prohibition】\n- Do not merge multiple entries: when encountering multiple abbreviations/models/codes connected by “/ , and or” (e.g., “550W/550A”, “X-15B/C”, “AB-1 and AB-2”), you must 【split into separate entries】.\n- Never generate a name that contains merging symbols (such as “/”, “and”) referring to two or more objects.\n\n【Name Consistency Rule】\n- name must be a 【complete, continuous】 fragment from the original text, character-for-character identical (including case, spaces, hyphens, dots, slashes, etc.). Do not rewrite, correct, or normalize name.\n\n【Abbreviation & Full Form Handling】\n- When encountering “full form (abbr)” or “abbr (full form)” structures: use the abbreviation as the main entry; only extract the full form as a separate entry if it is independently used and has technical value.\n- Do not take “full form (abbr)” as the whole name.\n\n【Normalization Scope】\n- description and zh may be normalized for clarity, but name must not be changed.\n- abbr should only be filled if it is indeed an abbreviation/code/model; full should only be filled if the original text explicitly contains the full form.\n\n【Filtering & Boundaries】\n- Exclude: abbreviations related to film/stage/audio production (e.g., O.S./OS, V.O./VO); plain “number+unit” (e.g., 10km, 3dB, 9G); generic words without specific reference (e.g., technology, system used generically); personal names (not organizations).\n- The total number of extracted entries should not exceed 15.\n\n【Deduplication】\n- Deduplicate strictly by 【exact name match (case and punctuation sensitive)】; keep the more complete version.\n- Correct: original “550W/550A” → 550W and 550A\n- Incorrect: {{\"name\":\"550W/550A\", ...}} (forbidden)\n\n【Current Background Information】\n{current_background}\n\n【Output Format】\n```json\n{{\n  \"abbreviations\": [\n    {{ \"name\": \"...\", \"description\": \"...\", \"abbr\": \"...\", \"full\": \"...\", \"zh\": \"...\" }}\n  ]\n}}\n```",
  "variables": [
    {
      "name": "current_background",
      "description": "Current background information."
    }
  ]
}
