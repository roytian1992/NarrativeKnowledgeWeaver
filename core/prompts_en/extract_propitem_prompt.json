{
  "id": "extract_prop_minimal_chain_v2",
  "category": "regular_function",
  "name": "Prop Extraction (Chain of Thought Version)",
  "description": "Extracts props related to character appearance, allowing for reasonable inference; results are uniformly placed in the results array.",
  "template": "Think internally according to the following steps, but only output JSON:\n1) Identify elements in the text: characters, scenes/settings, key actions or events.\n2) Determine prop source (any one is sufficient):\n   a) Character-prop: objects held/operated/depended on by the character (e.g., umbrella, weapon, book, notebook, mobile phone, wine glass).\n   b) Scene-prop: objects related to the scene's state or that are operated/changed (e.g., wooden door, curtain, lamp, switch, keyboard, screen, rope, sign, console, luggage).\n   c) Necessarily implied: objects necessarily implied by the semantics of the verb (unlock -> key/keypad; light -> lighter/matches; knock on door -> door).\n3) Filtering rules:\n   - Do not extract locations/organizations/abstract concepts (e.g., school, library, company, space station).\n   - Do not extract purely background natural scenery (sky, mountains, clouds, sea) unless explicitly operated on or undergoing a state change.\n   - Large vehicles/facilities are only extracted if directly controlled or acting as key objects (e.g., a car being driven; a launch console being activated).\n4) Fill in standardized names, appearance, status, etc., and add additional information in notes, such as model, code, etc.\n5) Generate one record corresponding to one character and prop.\n\n{content}\n\nOutput JSON object:\n{{\n  \"results\": [\n    {{\n      \"name\": \"\",\n      \"category\": \"prop\",\n      \"subcategory\": \"\",\n      \"appearance\": \"\",\n      \"status\": \"\",\n      \"character\": \"\",\n      \"evidence\": \"\"\n      \"notes\": \"\"\n    }}\n  ]\n}}",
  "variables": [
    {
      "name": "content",
      "description": "Text content"
    }
  ]
}